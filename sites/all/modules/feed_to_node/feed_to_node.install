<?php
/**
 * @file
 * Install, update and uninstall functions for the Feed to node module.
 */

/**
 * Implements hook_schema().
 */
function feed_to_node_schema() {
  $schema['feed_to_node'] = array(
    // Example (partial) specification for table "node".
    'description' => 'The base table for feeds.',
    'fields' => array(
      'fid' => array(
        'description' => 'The primary identifier for a feed.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'url' => array(
        'description' => 'The url where to get the feed.',
        'type' => 'text',
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'The name of the feed.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'nid' => array(
        'description' => 'The node ID.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'published' => array(
        'description' => 'Publish the nodes that are created, 1 = YES, 0 = NO.',
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'parser' => array(
        'description' => 'The parser type, definend by other modules that are invoked.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'active' => array(
        'type' => 'int',
        'description' => 'Tells wether a feed is active or not.',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'update_node' => array(
        'type' => 'int',
        'description' => 'The feeds not only adds new nodes, but also updates existing ones',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'updated_on' => array(
        'type' => 'int',
        'description' => 'unix timestamp of the last time updated',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'indexes' => array(
      'fid' => array('fid'),
      'nid' => array('nid'),
    ),
    'foreign keys' => array(
      'node' => array(
        'table' => 'node',
        'columns' => array('nid' => 'nid'),
      ),
      'feed_to_node_item' => array(
        'table' => 'feed_to_node_item',
        'columns' => array('fid' => 'fid'),
      ),
    ),
    'primary key' => array('fid'),
  );

  $schema['feed_to_node_item'] = array(
    // Example (partial) specification for table "node".
    'description' => 'The base table for feed items.',
    'fields' => array(
      'fiid' => array(
        'description' => 'The primary identifier for a feed item.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'nid' => array(
        'description' => 'The node ID.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'fid' => array(
        'description' => 'The feed ID.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'indexes' => array(
      'fiid' => array('fiid', 'fid'),
      'nid' => array('nid'),
    ),
    'foreign keys' => array(
      'node' => array(
        'table' => 'node',
        'columns' => array('nid' => 'nid'),
      ),
      'feed_to_node' => array(
        'table' => 'feed_to_node',
        'columns' => array('fid' => 'fid'),
      ),
    ),
    'primary key' => array('fid', 'fiid'),
  );
  return $schema;
}

/**
 * Implements hook_update().
 */
function feed_to_node_update_7100() {

  $spec = array(
    'type' => 'int',
    'description' => 'Tells wether a feed is active or not.',
    'size' => 'tiny',
    'unsigned' => TRUE,
    'not null' => TRUE,
    'default' => 0,
  );
  db_add_field('feed_to_node', 'active', $spec);
}

/**
 * Implements hook_update().
 */
function feed_to_node_update_7101() {

  $spec = array(
    'type' => 'int',
    'description' => 'unix timestamp of the last time updated',
    'unsigned' => TRUE,
    'not null' => TRUE,
    'default' => 0,
  );
  db_add_field('feed_to_node', 'updated_on', $spec);
}

/**
 * Implements hook_update().
 */
function feed_to_node_update_7102() {

  $spec = array(
    'type' => 'int',
    'description' => 'The feeds not only adds new nodes, but also updates existing ones',
    'size' => 'tiny',
    'unsigned' => TRUE,
    'not null' => TRUE,
    'default' => 0,
  );
  db_add_field('feed_to_node', 'update_node', $spec);
}
